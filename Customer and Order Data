--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 
--The DB was queried using SQLITE Studio.

#View table output
SELECT *
FROM BIT_DB.JanSales
LIMIT 5
;

#View table output
SELECT *
FROM BIT_DB.customers
LIMIT 5
;

#1. How many many unique orders were placed in January? In other words, how many distinct order ids do we have?
SELECT COUNT(DISTINCT orderid) AS Distinct_Orders
FROM BIT_DB.JanSales
WHERE LENGTH(orderid)=6
AND orderid <> 'Order ID'
;

#2. How many of those orders were for an iPhone?
SELECT COUNT(DISTINCT orderid) AS Distinct_Iphone_Orders
FROM BIT_DB.JanSales
WHERE LENGTH(orderid)=6
AND orderid <> 'Order ID'
AND product='iPhone'
;

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers  cx
INNER JOIN BIT_DB.FebSales feb
ON cx.order_id=feb.orderid
WHERE LENGTH(orderid)=6
AND orderid<>'Order ID'
;

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT Product
, price
FROM BIT_DB.JanSales
WHERE price IN (SELECT MIN(price) FROM BIT_DB.JanSales)
;

#5. What is the total revenue for each product sold in January?
SELECT Product
, SUM(Quantity)*price AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, quantity
, SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
GROUP BY Product
;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT cx.acctnum) AS February_Customers, 
ROUND(AVG(feb.Quantity*feb.price),2) AS Average_Order_Amount
FROM BIT_DB.customers cx
LEFT JOIN BIT_DB.FebSales feb
ON cx.order_id=feb.orderid
WHERE feb.Quantity>2 
AND LENGTH(orderid)=6
AND orderID<>'Order ID'
;

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product,SUM(Quantity) AS Total_Quantity 
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product
;


#9. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product,SUM(Quantity) AS Total_Quantity 
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product
;

#10. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT * 
FROM BIT_DB.JanSales
LIMIT 5
;

SELECT DISTINCT location AS NY_Locations
,COUNT(OrderID) AS Amount_of_Orders
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND LENGTH(orderID)=6
GROUP BY location
HAVING Amount_of_Orders>2
;

#11. How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity) AS Quantity
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY Product
;

#12. What was the average amount spent per account in February? 
SELECT ROUND(avg(account_total),2) AS Feb_Average_Account_Spend
FROM (SELECT cust.acctnum, sum(quantity * price) AS account_total
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid = cust.order_id
WHERE length(orderid) = 6 
GROUP BY cust.acctnum
) AS subquery
;


#13. What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).
SELECT AVG(Total_Quantity) AS Feb_AVG_Product_Quantity
FROM (
    SELECT cx.acctnum, SUM(feb.Quantity) AS Total_Quantity
    FROM BIT_DB.customers cx
    LEFT JOIN BIT_DB.FebSales feb
    ON cx.order_id = feb.orderID
    WHERE LENGTH(feb.orderID) = 6
    GROUP BY cx.acctnum
) AS subquery
;

#14. Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product, SUM(Quantity*price)AS Revenue 
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY Revenue DESC
LIMIT 1
;
